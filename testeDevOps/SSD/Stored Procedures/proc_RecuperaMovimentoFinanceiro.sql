
/*
	Autor: Egler Vieira
	Data Criação: 24/07/2014

	Descrição: 
	
	Última alteração : 	

*/
/*******************************************************************************
       Nome: CORPORATIVO.SSD.proc_RecuperaMovimentoFinanceiro
       Descrição: Essa procedure vai consultar os dados de movimentação financeira (endossos e baixas).
        Retorna os TOP N registros, a partir do último ponto de parada, especificado como parâmetro do procedimento.
            
       Parâmetros de entrada:
            
       Retorno:
             XML com as entidades.
      
*******************************************************************************/
CREATE PROCEDURE [SSD].[proc_RecuperaMovimentoFinanceiro](@PontoDeParada varchar(300))
AS
--declare @PontoDeParada varchar(300)
--set @PontoDeParada = '1944-01-01;0'
DECLARE @DataModificacao date
DECLARE @Endosso int

SET @DataModificacao = LEFT(@PontoDeParada, CHARINDEX(';',@PontoDeParada)-1)
--select @DataModificacao
SET @Endosso = RIGHT(@PontoDeParada, LEN(@PontoDeParada) - CHARINDEX(';',@PontoDeParada))
--SELECT @Endosso
--SELECT  
--FROM CleansingKit.dbo.[fn_Split](@PontoDeParada,';')  

;WITH CTE
AS
(
SELECT 
   ----------------------ENDOSSO------------------------------------------------
     EFV.SUK_ENDOSSO_FINANCEIRO
   , EFV.NUM_ENDOSSO
   , EFV.DTH_EMISSAO_ENDOSSO
   , EFV.COD_TIPO_ENDOSSO
   , EFV.COD_TIPO_MOVIMENTO COD_TIPO_MOVIMENTO_EF
   , EFV.COD_RAMO_EMISSOR COD_RAMO_EMISSOR_EF
   , EFV.DTH_INI_VIGENCIA DTH_INI_VIGENCIA_EF
   , EFV.DTH_FIM_VIGENCIA DTH_FIM_VIGENCIA_EF
   , EFV.VLR_PREMIO_TARIFARIO VLR_PREMIO_TARIFARIO_EF--Valor do prêmio tarifário do Endosso inteiro
   , EFV.VLR_PREMIO_LIQUIDO VLR_PREMIO_LIQUIDO_EF--Valor liquido do endosso inteiro
   , EFV.VLR_IOF  VLR_IOF_EF        --Valor do IOF do Endosso inteiro
   , EFV.VLR_PREMIO_TOTAL [VLR_PREMIO_BRUTO_EF] --Valor do prêmio bruto Endosso inteiro
   , EFV.DTH_OPERACAO DTH_OPERACAO_EF
   , EFV.COD_OPERACAO COD_OPERACAO_EF
   , EFV.COD_SUBGRUPO COD_SUBGRUPO_EF --Código do SubGrupo/SubEstipulante do Endosso
   , EFV.COD_FONTE [COD_FILIAL]--Código da Filial de Faturamento
   , EFV.COD_MODALIDADE COD_MODALIDADE_EF
   ----------------------FATO MOVIMENTO------------------------------------------
   , ISNULL(FMV.DTH_ATUALIZACAO, EFV.DTH_OPERACAO) DTH_ATUALIZACAO_MV-- Data de Atualização da fato
   , FMV.VLR_PREMIO_BRUTO VLR_PREMIO_BRUTO_MV
   , FMV.VLR_PREMIO_LIQUIDO VLR_PREMIO_LIQUIDO_MV 
   , FMV.VLR_IOF VLR_IOF_MV --ValorIOF
   ----------------------CONTRATO VIDA-------------------------------------------
   , CASE WHEN CV.NUM_BIL_CERTIF IS NOT NULL AND CV.NUM_BIL_CERTIF > 0 THEN CV.NUM_BIL_CERTIF
       ELSE CASE WHEN CV1.NUM_BIL_CERTIF IS NOT NULL AND CV1.NUM_BIL_CERTIF > 0 THEN CV1.NUM_BIL_CERTIF
	             ELSE CASE WHEN PB.NUM_BIL_CERTIF IS NOT NULL AND PB.NUM_BIL_CERTIF > 0  THEN PB.NUM_BIL_CERTIF ELSE NULL END
	   END
     END NUM_BIL_CERTIF

	 , CleansingKit.dbo.fn_RemoveLeadingZeros(CASE WHEN CV.NUM_PROPOSTA_SIVPF IS NOT NULL AND CV.NUM_PROPOSTA_SIVPF > 0 THEN CV.NUM_PROPOSTA_SIVPF
       ELSE CASE WHEN CV1.NUM_PROPOSTA_SIVPF IS NOT NULL AND CV1.NUM_PROPOSTA_SIVPF > 0 THEN CV1.NUM_PROPOSTA_SIVPF
	            -- ELSE  NULL  COMENTADO POR PEDRO
				ELSE CASE WHEN CV.NUM_PROPOSTA_SIVPF IS NULL AND   (CV.NUM_APOLICE IN ('109300000559','109300002344','97010000889')) THEN CV.NUM_BIL_CERTIF
					ELSE CASE WHEN CV1.NUM_PROPOSTA_SIVPF IS NULL AND  (CV1.NUM_APOLICE IN ('109300000559','109300002344','97010000889')) THEN CV.NUM_BIL_CERTIF
						---
						ELSE NULL
						END
				END
	   END
     END) NUM_PROPOSTA_SIVPF

   , CASE WHEN EFV.NUM_APOLICE IS NULL OR EFV.NUM_APOLICE < 0 THEN CASE WHEN PB.NUM_APOLICE IS NULL OR PB.NUM_APOLICE < 0 THEN CV.NUM_APOLICE ELSE  PB.NUM_APOLICE END ELSE EFV.NUM_APOLICE END NUM_APOLICE
   , CV.COD_SUBGRUPO
   , CV.IND_ORIGEM_REGISTRO
   , CASE WHEN CV.[STA_ANTECIPACAO] = 'S' THEN 1 WHEN CV.[STA_ANTECIPACAO] = 'N' THEN 0 END AS [STA_ANTECIPACAO]
   , CASE WHEN CV.[STA_MUDANCA_PLANO] = 'S' THEN 1 WHEN CV.[STA_MUDANCA_PLANO] = 'N' THEN 0 END AS [STA_MUDANCA_PLANO]
   ---------------------PARCELAS BAIXADAS----------------------------------------
   
   , PB.NUM_PARCELA
   , PB.VLR_PREMIO_PARCELA
   , PB.VLR_PREMIO_LIQUIDO_PARCELA
   , PB.VLR_IOF_PARCELA
   , PB.VLR_PREMIO_VG
   , PB.VLR_PREMIO_AP
   , PB.VLR_TARIFA
   , PB.VLR_BALCAO
   , PB.DTH_BAIXA_PARCELA
   , PB.NUM_TITULO
   , PB.COD_TIPO_MOVIMENTO
   , PB.COD_ORIGEM_PAGAMENTO
   ---------------------PRODUTO--------------------------------------------------
   , PU.COD_PRODUTO_SIAS
--INTO A
--FROM (SELECT TOP 10000 *  --COMENTADO POR PEDRO
FROM (SELECT TOP 5000 * 
      FROM DMDB13.dbo.DM_027_ENDOSSO_FINANCEIRO_VIDA EFV 
	  WHERE EFV.SUK_ENDOSSO_FINANCEIRO > @Endosso --AND NUM_APOLICE <> '109300000559'
	  AND EXISTS (SELECT * 
	                FROM DMDB13.dbo.DM_029_FATO_MOV_FINANCEIRO_VIDA FMV
					WHERE EFV.SUK_ENDOSSO_FINANCEIRO = FMV.SUK_ENDOSSO_FINANCEIRO)
      ORDER BY EFV.SUK_ENDOSSO_FINANCEIRO ASC ) EFV
LEFT JOIN DMDB13.dbo.DM_029_FATO_MOV_FINANCEIRO_VIDA FMV
ON EFV.SUK_ENDOSSO_FINANCEIRO = FMV.SUK_ENDOSSO_FINANCEIRO
LEFT JOIN DMDB13.dbo.DM_030_CONTRATO_VIDA CV
ON CV.SUK_CONTRATO_VIDA = FMV.SUK_CONTRATO_VIDA
LEFT JOIN DMDB13.dbo.DM_028_PARCELAS_BAIXADAS_VIDA PB
ON PB.SUK_PARCELA_BAIXADA = FMV.SUK_PARCELA_BAIXADA
LEFT JOIN DMDB13.dbo.DM_030_CONTRATO_VIDA CV1
ON CV1.NUM_BIL_CERTIF = PB.NUM_BIL_CERTIF
LEFT JOIN DMDB13.dbo.DM_026_PRODUTO_UNIFICADO PU
ON PU.SUK_PRODUTO_UNIFICADO = FMV.SUK_PRODUTO_UNIFICADO
WHERE PU.COD_PRODUTO_SIAS IS NOT NULL
--WHERE FMV.DTH_ATUALIZACAO IS NOT NULL -- Sem registro na fato (foi removido para evitar erro na carga) Egler: 09/09/2014
--AND CV.NUM_APOLICE = '109300000559'
--WHERE CV1.NUM_PROPOSTA_SIVPF = 91007000001001
--OR CV.NUM_PROPOSTA_SIVPF = 91007000001001
--ORDER BY SUK_ENDOSSO_FINANCEIRO
) 
SELECT *
FROM CTE
OPTION (MAXDOP 4)
--WHERE NUM_APOLICE = -8



--go [SSD].[proc_RecuperaMovimentoFinanceiro] '1900-01-01;8836000'

