
/*******************************************************************************
	Nome: Fenae.Corporativo.proc_RecuperaPropostaSaudeFamiliaEVida
	
	Descrição: Essa procedure vai consultar os dados de Propostas Saúde
		
	Parâmetros de entrada:

	Retorno:
	ResultSet com informações que preencherão a tabela temporária que fará o merge com a Dados.Proposta
	
*******************************************************************************/
CREATE PROCEDURE Dados.proc_RecuperaPagamentosProtheus 
--	@PontoParada VARCHAR(400)
AS

 SELECT *  FROM  OPENQUERY ([SCASE],'

;WITH PGTOS AS (

SELECT DISTINCT E1_CLIENTE,E1_NUM,E1_VALOR,E1_EMISSAO,E1_MESBASE,E1_ANOBASE,E1_BAIXA,E1_SUBCON,
--ROW_NUMBER() OVER (PARTITION BY E1_CODINT,E1_CODEMP,E1_CONEMP,E1_SUBCON,E1_CLIENTE order by E1_MESBASE+E1_ANOBASE ASC) AS Parcela,
''04'' AS EMPRESAPG,E1_VENCTO,E1_CODEMP,E1_CODINT,BQC_XNUMPR as PROPOSTA,E5_DTDISPO,E5_MOTBX
FROM SE1040
INNER JOIN BQC040 ON BQC_CODINT = E1_CODINT AND BQC_CODEMP = E1_CODEMP AND BQC_CODCLI = E1_CLIENTE AND E1_CONEMP = BQC_NUMCON AND E1_SUBCON = BQC_SUBCON AND BQC040.D_E_L_E_T_=''''
LEFT JOIN SE5040 ON E5_PREFIXO = E1_PREFIXO AND E5_NUMERO = E1_NUM AND E5_TIPO = E1_TIPO AND E5_CLIFOR = E1_CLIENTE AND SE5040.D_E_L_E_T_='''' AND E5_MOTBX <> ''CAN''
WHERE SE1040.D_E_L_E_T_=''''
UNION ALL
SELECT E1_CLIENTE,E1_NUM,E1_VALOR,E1_EMISSAO,E1_MESBASE,E1_ANOBASE,E1_BAIXA,E1_SUBCON,
--ROW_NUMBER() OVER (PARTITION BY E1_CODINT,E1_CODEMP,E1_CONEMP,E1_SUBCON,E1_CLIENTE order by E1_MESBASE+E1_ANOBASE ASC) AS Parcela,
''03'' AS EMPRESAPG,E1_VENCTO,E1_CODEMP,E1_CODINT,BA3_XNUMPR as PROPOSTA,E5_DTDISPO,E5_MOTBX
FROM SE1030
LEFT JOIN BM1030 ON BM1_CODINT = E1_CODINT AND BM1_CODEMP = E1_CODEMP AND BM1_MATRIC = E1_MATRIC AND BM1_NUMTIT = E1_NUM AND BM1_PLNUCO = E1_PLNUCOB AND BM1_TIPUSU = ''T'' AND BM1030.D_E_L_E_T_=''''
LEFT JOIN SE5030 ON E5_PREFIXO = E1_PREFIXO AND E5_NUMERO = E1_NUM AND E5_TIPO = E1_TIPO AND E5_CLIFOR = E1_CLIENTE AND SE5030.D_E_L_E_T_='''' AND E5_MOTBX <> ''CAN''
INNER JOIN BA3030 ON BA3_CODINT = E1_CODINT AND BA3_CODEMP = E1_CODEMP AND BA3_MATRIC = E1_MATRIC AND E1_CLIENTE = BA3_CODCLI AND BA3030.D_E_L_E_T_=''''
WHERE SE1030.D_E_L_E_T_=''''
),
PROPOSTAS AS (SELECT DISTINCT
	PSP_FILIAL,
	  PSP_CODINT,
	  PSP_CODEMP,
	  PSP_CONEMP,
	  PSP_VERCON,
	  PSP_SUBCON,
	  PSP_VERSUB,
	  PSP_NUMPRP,
	  ''04'' AS EMPRESA,
	  PSP_CODCLI
	  
		
FROM PSP040 WITH (NOLOCK)
INNER JOIN PHN040 ON PSP_FILIAL = PHN_FILIAL
			 AND PSP_CODINT = PHN_CODINT 
			 AND PSP_CODEMP = PHN_CODEMP 
			 AND PSP_NUMPRP = PHN_NUMPRP
			 AND PHN040.D_E_L_E_T_=''''
			 AND PHN_SUBCON = PSP_SUBCON
			 AND PHN_CONEMP = PSP_CONEMP
			 AND PHN_VERCON = PSP_VERCON
			 AND PHN_VERSUB = PSP_VERSUB	
UNION ALL 

SELECT DISTINCT
	PSP_FILIAL,
	  PSP_CODINT,
	  PSP_CODEMP,
	  PSP_CONEMP,
	  PSP_VERCON,
	  PSP_SUBCON,
	  PSP_VERSUB,
	  PSP_NUMPRP,
	  ''03'' AS EMPRESA,
	  PSP_CODCLI
FROM PSP030 
WHERE D_E_L_E_T_='''' --AND  PSP_NUMPRP = ''000000000010''		
)
SELECT 
 IDMotivo,
 IDMotivoSituacao,
 IDEndosso,
 IDSituacaoProposta,
 Parcela,
 NumeroTitulo,
 Valor,
 ValorIOF,
 DataEfetivacao,
 DataArquivo,
 CodigoNaFonte,
 TipoDado,
 EfetivacaoPgtoEstimadoPelaEmissao,
 SinalLancamento,
 ExpectativaDeReceita,
 Arquivo,
 DataInicioVigencia,
 DataFimVigencia,
 ParcelaCalculada,
 SaldoProcessado,
 DataEmissao,
 DataVencimento,
 EMPRESA,
 E1_CLIENTE,
 ANOMESBASE,		
 NumeroProposta,
 OPERADORA,
E5_MOTBX,
Ranking

From


(
SELECT *,ROW_NUMBER() OVER (PARTITION BY EMPRESA,NumeroProposta,E1_CLIENTE order by ANOMESBASE ASC) AS Parcela
FROM 
(SELECT  1 AS IDMotivo,
		1 AS IDMotivoSituacao,
		NULL AS IDEndosso,
		1 AS IDSituacaoProposta,
		--Parcela,
		E1_NUM AS NumeroTitulo,
		E1_VALOR  AS Valor,
		NULL	AS	ValorIOF,
		CAST(NULLIF(E1_BAIXA,'''') AS DATE) AS DataEfetivacao,
		GetDate() as DataArquivo,
		2 AS CodigoNaFonte,
		''PROTHEUS'' AS TipoDado,
		0 AS EfetivacaoPgtoEstimadoPelaEmissao,
		NULL AS SinalLancamento,
		''0'' AS ExpectativaDeReceita,
		''PROTHEUS'' AS Arquivo,
		NULL AS DataInicioVigencia,
		NULL AS DataFimVigencia,
		NULL AS ParcelaCalculada,
		NULL AS SaldoProcessado,
		E1_EMISSAO AS DataEmissao,
		E1_VENCTO AS DataVencimento,
		EMPRESA,
		E1_CLIENTE,
		E1_ANOBASE+E1_MESBASE AS ANOMESBASE,		
	    EMPRESA+RIGHT(PSP_CODEMP,1)+PSP_NUMPRP+RIGHT(E1_SUBCON,3) as NumeroProposta,
		PSP_CODINT AS OPERADORA,
		ROW_NUMBER() OVER (PARTITION BY  EMPRESA,EMPRESA+RIGHT(PSP_CODEMP,1)+PSP_NUMPRP+RIGHT(E1_SUBCON,3),E1_CLIENTE,E1_ANOBASE+E1_MESBASE ORDER BY E1_ANOBASE+E1_MESBASE ASC) Ranking,
		E5_MOTBX
		FROM PGTOS PG
		INNER JOIN PROPOSTAS PRP ON PRP.PSP_CODCLI = PG.E1_CLIENTE AND PRP.EMPRESA = PG.EMPRESAPG AND PRP.PSP_CODEMP = PG.E1_CODEMP and PRP.PSP_CODINT = PG.E1_CODINT AND PRP.PSP_NUMPRP = PG.PROPOSTA
		
		) as A  where Ranking = 1) X  ORDER BY EMPRESA,NumeroProposta,E1_CLIENTE,ANOMESBASE


					')

